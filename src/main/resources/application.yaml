# =============================================
# springboot 2 configurations
# ---------------------------------------------
spring:
  application:
    name: ${OPENSHIFT_APP_NAME:3scale-proxy-policy}
  datasource:
    initialization-mode: never

api:
  title: ${OPENSHIFT_APP_NAME:3scale-proxy-policy}
  description: 3scale-proxy-policy
  version: 1
  hostname: ${OPENSHIFT_HOST_NAME:apps.openshift.raphael.lab.upshift.rdu2.redhat.com}

logging:
  config: classpath:logback.xml
  level:
    root: DEBUG

camel:
  health:
    check:
      routes:
        enabled: true
      indicator:
        enabled: true
      service:
        enabled: true
  springboot:
    name: ${OPENSHIFT_APP_NAME:3scale-proxy-policy}
    main-run-controller: true
  component:
    jmxEnabled: true

server:
  address: 0.0.0.0
  port: ${SERVER_PORT:8090}

management:
  security:
    enabled: false
  server:
    port: 8081
    address: 0.0.0.0
  endpoints:
    web:
      exposure:
        include:
          - info
          - health
          - metrics
          - jvm
          - prometheus
  metrics:
    export:
      prometheus:
        enabled: true

# =============================================
# opentracing configurations
# ---------------------------------------------
# =============================================
# opentracing configurations
# see: https://github.com/opentracing-contrib/java-spring-jaeger/blob/master/README.md
# ---------------------------------------------

opentracing:
  jaeger:
    enabled: true
    service-name: ${OPENSHIFT_APP_NAME:3scale-proxy-policy}
    enable-b3-propagation: true
    log-spans: true
    const-sampler:
      decision: true
    udp-sender:
      host: ${OPENSHIFT_JAEGER_TRACE_HOST:localhost}
      port: 6831
    http-sender:
      #url: http://jaeger-collector:14268/api/traces
      #url: http://jaeger-collector.microservices.svc.cluster.local:14268/api/traces
      url: http://${OPENSHIFT_JAEGER_TRACE_HOST:localhost}:${OPENSHIFT_JAEGER_TRACE_PORT:14268}/api/traces}
      #password:
      #username:
    expand-exception-logs: true
    remote-reporter:
      max-queue-size: 10000
      flush-interval: 1000
    tags:
      - 3scale
      - proxy
      - ip-rate-limit

# =============================================
# datagrid configurations
# ---------------------------------------------
infinispan:
  health:
    host: ${INFINISPAN_APP_NAME:datagrid-fuse-policy}.${INFINISPAN_SERVICE_NAMESPACE:rh-datagrid-73}.svc:9990
  client:
    hotrod:
      username: ${INFINISPAN_HOTROD_USERNAME:}
      password: ${INFINISPAN_HOTROD_PASSWORD:}
      use-authn: ${INFINISPAN_HOTROD_AUTHN_ENABLED:false}
      connection-timeout: ${INFINISPAN_HOTROD_CONNECTION_TIMEOUT:5000}
      socket-timeout: ${INFINISPAN_HOTROD_SOCKET_TIMEOUT:5000}
      max-retries: ${INFINISPAN_HOTROD_MAX_RETRIES:3}
      server-list: ${INFINISPAN_APP_NAME:datagrid-fuse-policy}.${INFINISPAN_SERVICE_NAMESPACE:rh-datagrid-73}.svc:11222
      trust-store-path: ${SERVICE_CA_PATH:/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt}
      host: ${INFINISPAN_APP_NAME:datagrid-fuse-policy}.${INFINISPAN_SERVICE_NAMESPACE:rh-datagrid-73}.svc
      port: ${INFINISPAN_HOTROD_PORT:11222}
      cache: ${INFINISPAN_CACHE:default}

# =============================================
# custom configurations
# ---------------------------------------------
custom:
  proxy:
    consumer: ${FUSE_PROXY_CONSUMER_COMPONENT:netty4-http}
    producer: ${FUSE_PROXY_PRODUCER_COMPONENT:http4}
    port: ${FUSE_PROXY_PORT:8443}
    producer-query: ${FUSE_PRODUCER_QUERY:?connectionClose=false&bridgeEndpoint=true&copyHeaders=true}
    keystore:
      #dest: ${FUSE_PROXY_KEYSTORE_DESTINATION:/deployments/data/keystore.jks}
      #pass: ${FUSE_PROXY_KEYSTORE_PASSWORD:changeme}
      dest: ${FUSE_PROXY_KEYSTORE_DESTINATION:/deployments/data/keystore.jks}
      pass: ${FUSE_PROXY_KEYSTORE_PASSWORD:49CNOIPBvFh6b9yKpzK9PKCr1}
    debug-headers: ${FUSE_PROXY_DEBUG_HEADERS:true}
  policy:
    ip-rate-limit:
      max-hit-count: ${POLICY_IP_RATE_LIMIT_MAX_HIT_COUNT:10}
      # milliseconds time window for external requests
      # 60s = 60000ms
      time-window: ${POLICY_IP_RATE_LIMIT_TIME_WINDOW:60000}
      x-forwarded-for: ${POLICY_IP_RATE_LIMIT_X_FORWARDED_FOR:10.6.128.23,200.164.107.55}
      white-list-ips: ${POLICY_IP_RATE_LIMIT_WHITE_LIST_IPS:}
